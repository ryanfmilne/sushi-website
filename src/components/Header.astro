---
// Header Component
import { Image } from "astro:assets";
import logoSrc from "../assets/placeholder-logo.svg";

// Props to control header appearance
export interface Props {
  transparent?: boolean;
}

const { transparent = false } = Astro.props;

// Navigation items array - easily updatable
const navigationItems = [
  { name: "Home", url: "/" },
  { name: "Menu", url: "/menu" },
  { name: "Specials", url: "/specials" },
  { name: "Contact", url: "/contact" },
  // Add new items here in the future
  // Example: { name: "About", url: "/about" }
];
---

<header
  class={`${transparent ? "bg-transparent bg-gradient-to-b from-black/80 to-black/0" : "bg-black"} text-white fixed w-full top-0 z-50 transition-colors duration-300`}
  id="main-header">
  <div class="container mx-auto p-4">
    <nav class="flex justify-between items-center">
      <div class="flex items-center gap-2">
        <a href="/" class="flex items-center">
          <Image
            src={logoSrc}
            alt="Sushi Restaurant Logo"
            width={240}
            height={40}
            class="h-10 w-auto"
            format="svg"
            loading="eager"
          />
        </a>
      </div>
      <div class="hidden md:flex space-x-6">
        {
          navigationItems.map((item) => (
            <a
              href={item.url}
              class="hover:text-primary transition-colors font-medium">
              {item.name}
            </a>
          ))
        }
      </div>
      <button id="mobile-menu-button" class="md:hidden text-white">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </nav>
    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden md:hidden pt-4 pb-2 space-y-2">
      {
        navigationItems.map((item) => (
          <a
            href={item.url}
            class="block py-2 hover:text-amber-300 transition-colors">
            {item.name}
          </a>
        ))
      }
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const header = document.getElementById("main-header");

  mobileMenuButton?.addEventListener("click", () => {
    mobileMenu?.classList.toggle("hidden");
  });

  // Add scroll event listener to change header background when scrolling
  document.addEventListener("DOMContentLoaded", () => {
    const isTransparent = header?.classList.contains("bg-transparent");

    if (isTransparent) {
      window.addEventListener("scroll", () => {
        if (window.scrollY > 50) {
          header?.classList.remove(
            "bg-transparent",
            "bg-gradient-to-b",
            "from-black/80",
            "to-black/0"
          );
          header?.classList.add("bg-black", "shadow-md");
        } else {
          header?.classList.add(
            "bg-transparent",
            "bg-gradient-to-b",
            "from-black/80",
            "to-black/0"
          );
          header?.classList.remove("bg-black", "shadow-md");
        }
      });
    }
  });
</script>
