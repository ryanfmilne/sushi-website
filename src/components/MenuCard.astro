---
export interface Props {
  title: string;
  price: number;
  description: string;
  image?: string;
  vegetarian?: boolean;
  vegan?: boolean;
  glutenFree?: boolean;
  spicyLevel?: number;
}

const {
  title,
  price,
  description,
  image,
  vegetarian = false,
  vegan = false,
  glutenFree = false,
  spicyLevel = 0,
} = Astro.props;

// Create spicy level indicators
const spicyIcons = [];
for (let i = 0; i < spicyLevel; i++) {
  spicyIcons.push(i);
}
---

<div
  class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
  {
    image && (
      <div class="relative h-48 bg-gray-200">
        <img
          src={image}
          alt={title}
          class="w-full h-full object-cover"
          loading="lazy"
        />
      </div>
    )
  }
  <div class="p-4">
    <div class="flex justify-between items-start mb-2">
      <h3 class="text-lg font-semibold">{title}</h3>
      <span class="text-amber-600 font-medium">${price.toFixed(2)}</span>
    </div>
    <p class="text-stone-600 text-sm mb-3">{description}</p>
    <div class="flex flex-wrap items-center gap-2 mt-auto">
      {
        vegetarian && (
          <span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-0.5 rounded">
            Vegetarian
          </span>
        )
      }
      {
        vegan && (
          <span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-0.5 rounded">
            Vegan
          </span>
        )
      }
      {
        glutenFree && (
          <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded">
            Gluten-Free
          </span>
        )
      }
      {
        spicyLevel > 0 && (
          <div class="flex items-center">
            <span class="text-xs text-stone-600 mr-1">Spicy:</span>
            <div class="flex">
              {spicyIcons.map(() => (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 text-red-500"
                  viewBox="0 0 20 20"
                  fill="currentColor">
                  <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM10 2a6 6 0 100 12 6 6 0 000-12z"
                    clip-rule="evenodd"
                  />
                </svg>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </div>
</div>
